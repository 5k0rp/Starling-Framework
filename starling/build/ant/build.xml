<?xml version="1.0"?>
<!--
  ~
  ~ Starling Framework
  ~ Copyright 2011-2014 Gamua OG. All Rights Reserved.
  ~ 
  ~ This program is free software. You can redistribute and/or modify it
  ~ in accordance with the terms of the accompanying license agreement.
  ~
  -->
<project name="starling" basedir="../.." default="build">
  <description>Starling SWC Assembler</description>   
  <!-- ################################################################### -->
  <!-- ########################## SETTINGS ############################### -->
  <!-- ################################################################### -->
  <property environment="env" />
  <!-- check for Apache FLEX SDK env. variable -->
  <condition property="FLEX_HOME" value="${env.FLEX_HOME}">
    <isset property="env.FLEX_HOME"/>
  </condition>
  <!-- check for Adobe AIR SDK env. variable -->
  <condition property="FLEX_HOME" value="${env.AIR_HOME}">
    <isset property="env.AIR_HOME"/>
  </condition>
  <!-- fallback to flash builder sdk -->
  <property name="FLEX_HOME" location="/Applications/Adobe Flash Builder 4.7/sdks/4.6.0" />
  <echo message="Using SDK: ${FLEX_HOME}"/>
  <!-- directories -->
  <property name="deploy.dir" location="bin" />
  <property name="src.dir" location="src" />
  <!-- ################################################################### -->
  <!-- ########################## TASKDEFS ############################### -->
  <!-- ################################################################### -->
  <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
  <!-- ################################################################### -->
  <!-- ########################## TARGETS ################################ -->
  <!-- ################################################################### -->
  <!-- Init build phase -->
  <target name="init">
    <mkdir dir="${deploy.dir}" />
    <tempfile property="temp.dir" destDir="${java.io.tmpdir}" prefix="${ant.project.name}-doc-xml-" />
  </target>
  <!-- Build SWC phase -->
  <target name="build-swc" description="compile starling.swc">
    <compc output="${deploy.dir}/${ant.project.name}.swc">
      <include-sources dir="${src.dir}" includes="*" />
    </compc>
  </target>
  <!-- Build ASDoc phase -->
  <target name="build-doc" description="Call asdoc to generate dita xml files">
    <asdoc output="${temp.dir}" lenient="true" failonerror="true" keep-xml="true" skip-xsl="true" fork="true">
      <compiler.source-path path-element="${basedir}/src" />
      <doc-sources path-element="${basedir}/src" />
    </asdoc>
  </target>
  <!-- Update SWC phase -->
  <target name="update-swc" description="Update swc with asdoc xml">
    <zip destfile="${deploy.dir}/${ant.project.name}.swc" update="true">
      <zipfileset dir="${temp.dir}/tempdita" prefix="docs">
        <include name="*.*"/>
        <exclude name="ASDoc_Config.xml" />
        <exclude name="overviews.xml" />
      </zipfileset>
    </zip>
  </target>
  <!-- Post clean phase -->
  <target name="post-clean" description="delete temporary data">
    <delete dir="${temp.dir}" failonerror="false" includeEmptyDirs="true" />
  </target>
  <!-- Default build target -->
  <target name="build" depends="init,build-swc,build-doc,update-swc,post-clean" description="Builds the library (.swc file), including ASDoc code hints" />
</project>